缓存策略：1）缓存预处理内容、2）较快的设备上做缓存、3）缓存距离客户端更近；
缓存写操作用加锁或者队列的方式实现单线程写；
缓存穿透解决方案：
    1）布隆过滤器（把所有可能存在的数据都缓存到一个bitmap里面，一个一定不存在的数据一定会被拦截）；
    2）不存在数据也缓存起来；
缓存雪崩解决方案：过期时间随机；
缓存击穿：单个热点数据失效导致请求大量访问数据库
    1）缓存失效时（获取数据为null），不直接访问db而是尝试去拿互斥锁，拿锁成功后，访问db+数据写入缓存；
    2）永不过期，异步刷新缓存；
    3）服务降级，不走数据库了；
缓存方案不可能达到实时一致性，但是可以达到最终一致性，删除缓存重试机制；
布隆过滤器应用范围：大数据量的集合中判定某元素是否存在；
缓存降级常见方案：redis出现问题时不查数据库，直接返回一个默认值给用户；
缓存数据库一致性问题：
    a）双删策略（先删除缓存，再更新数据库，等待一段时间后再删除缓存，可异步）；
    b）先更新数据库再删除缓存；