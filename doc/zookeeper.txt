/foo/doo这个表示一个znode，其父节点为/foo，/foo的父节点为根节点/，根节点没有父节点；
原子广播：保证各个server之间的同步，基于Zab协议实现。Zab协议有两种模式：a）恢复模式（选主）；b）广播模式（同步）；
服务启动或者主节点崩溃后，进入选主模式；主节点和其他节点之间通过同步来达到相同的系统状态；
事务一致性保证：采用自增的事务id（64位）来标识事务；
zookeeper实现分布式锁原理：加锁在locker节点下创建临时节点，释放锁删除临时节点；
zookeeper分布式锁具体实现：locker节点下面会按照自增序号创建节点，如果自己创建的自增节点序号最小则获取到了锁，否则找出序号最小的节点并注册
事件监听器，如果该节点被删除客户端Watcher会收到通知，再次判断自己创建的节点是否为序号最小的节点并以此循环；
zookeeper在选主期间会导致服务不可用（spring cloud所采用的eureka的各个节点则是平等的，一个节点挂掉仍会保证正常的服务）；
zooKeeper应用场景：数据发布/订阅、负载均衡、命名服务、分布式协调/通知和分布式锁；
zookeeper是一个树型的目录服务，最上面的节点被称之为根节点；